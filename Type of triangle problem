#TYPE OF TRIANGLE 
#DESCRIPTION: You are given a 0-indexed integer array nums of size 3 which can form the sides of a triangle. A triangle is called equilateral if it has all sides of equal length. A triangle is called isosceles if it has exactly two sides of equal length. A triangle is called scalene if all its sides are of different lengths. Return a string representing the type of triangle that can be formed or "none" if it cannot form a triangle.
#My code is only for the 2 cases that I needed to do in order to be accepted. 

class Solution(object):
    def triangleType(self, nums):
        a, b, c = nums[0], nums[1], nums[2] #easier and clearer to code when put in a format

        if a == b == c:  # all sides equal
            return "equilateral"

        calc1 = a + b #calculates sum of 2 sides 
        calc2 = b + c
        calc3 = a + c

        if calc1 > c and calc2 > a and calc3 > b: #nested if statement, first calculates if sum of 2 sides is greater than the 3rd (if it is then its a scalene triangle)
            if a == b or b == c or a == c: #condition to see if all sides are equal
                return "isosceles"
            else:
                return "scalene"
        else:
            return "none" 
